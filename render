#!/usr/bin/env python3
import os
import re
import argh
import grip
import subprocess

check_output = lambda *a: subprocess.check_output(' '.join(map(str, a)), shell=True, executable='/bin/bash').decode('utf-8').strip()

template = r"""<!-- based on: https://github.com/orderedlist/minimal -->
<!doctype content>
<content>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="chrome=1">
        <title>%(title_header)s</title>
        <style>
            body {
                background-color: #fff;
                padding:50px;
                font: 14px/1.5 -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;
                color: #4a4a4a;
                font-weight:400;
            }
            h1, h2, h3, h4, h5, h6 {
                color:#222;
                margin:0 0 20px;
            }
            p, ul, ol, table, pre, dl {
                margin:0 0 20px;
            }
            p.view {
                margin: 20px 0;
            }
            h1::first-letter {
              text-transform: uppercase;
            }
            h1, h2, h3 {
                line-height:1.1;
            }
            h1 {
                font-size:28px;
                font-weight: 500;
                line-height: 40px;
            }
            h2 {
                color:#393939;
                font-weight: 500;
            }
            h3, h4, h5, h6 {
                color:#494949;
                font-weight: 500;
            }
            a {
                color:#39c;
                text-decoration:none;
            }
            a:hover {
                color:#069;
            }
            a small {
                font-size:11px;
                color:#777;
                margin-top:-0.3em;
                display:block;
            }
            a:hover small {
                color:#777;
            }
            .wrapper {
                width:860px;
                margin:0 auto;
            }
            blockquote {
                border-left:1px solid #e5e5e5;
                margin:0;
                padding:0 0 0 20px;
                font-style:italic;
            }
            code, pre {
                font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;
                color:#333;
            }
            pre {
                padding:8px 15px;
                background: #f8f8f8;
                border:1px solid #e5e5e5;
                overflow-x: auto;
            }
            table {
                width:100%%;
                border-collapse:collapse;
            }
            th, td {
                text-align:left;
                padding:5px 10px;
                border-bottom:1px solid #e5e5e5;
            }
            dt {
                color:#444;
                font-weight:500;
            }
            th, td {
                padding-left: 0;
                color:#444;
            }
            img {
                max-width:100%%;
            }
            header {
                width:270px;
                float:left;
                position:fixed;
                -webkit-font-smoothing:subpixel-antialiased;
            }
            strong {
                color:#222;
                font-weight:500;
            }
            section {
                width:500px;
                float:right;
                padding-bottom:10px;
            }
            small {
                font-size:11px;
            }
            hr {
                border:0;
                background:#e5e5e5;
                height:1px;
                margin:0 0 20px;
            }
            footer {
                width:270px;
                float:left;
                position:fixed;
                bottom:50px;
                -webkit-font-smoothing:subpixel-antialiased;
            }
            @media print, screen {
                div.wrapper {
                    width:auto;
                    margin:0;
                }
                header, section, footer {
                    float:none;
                    position:static;
                    width:auto;
                }
                h2 {
                    border-width:1px 0;
                }
                footer {
                    border-top:1px solid #e5e5e5;
                    border-width:1px 0;
                    padding:20px 0;
                    margin:0 0 20px;
                }
                header a small {
                    display:inline;
                }
            }
            @media print, screen and (max-width: 720px) {
                body {
                    word-wrap:break-word;
                }
                header {
                    padding:0;
                }
                header p.view {
                    position:static;
                }
                pre, code {
                    word-wrap:normal;
                }
            }
            @media print, screen and (max-width: 480px) {
                body {
                    padding:15px;
                }
            }
            @media print {
                body {
                    padding:0.4in;
                    font-size:12pt;
                    color:#444;
                }
            }
            %(css)s
        </style>
        <style>
            .highlight .pl-c { color: #586e75 !important; } /* Comment */
            .highlight .pl-err { color: #dc322f !important; background-color: #fdf6e3 !important; } /* Error */
            .highlight .pl-g { color: #93a1a1 !important; } /* Generic */
            .highlight .pl-k { color: #CB4B16 !important; } /* Keyword */
            .highlight .pl-l { color: #93a1a1 !important; } /* Literal */
            .highlight .pl-n, .highlight .h { color: #93a1a1 !important; } /* Name */
            .highlight .pl-o { color: #859900 !important; } /* Operator */
            .highlight .pl-x { color: #cb4b16 !important; } /* Other */
            .highlight .pl-p { color: #93a1a1 !important; } /* Punctuation */
            .highlight .pl-cm { color: #586e75 !important; } /* Comment.Multiline */
            .highlight .pl-cp { color: #859900 !important; } /* Comment.Preproc */
            .highlight .pl-c1 { color: #859900 !important; } /* Comment.Single */
            .highlight .pl-cs { color: #859900 !important; } /* Comment.Special */
            .highlight .pl-gd { color: #2aa198 !important; } /* Generic.Deleted */
            .highlight .pl-ge { color: #93a1a1 !important; font-style: italic !important; } /* Generic.Emph */
            .highlight .pl-gr { color: #dc322f !important; } /* Generic.Error */
            .highlight .pl-gh { color: #cb4b16 !important; } /* Generic.Heading */
            .highlight .pl-gi { color: #859900 !important; } /* Generic.Inserted */
            .highlight .pl-go { color: #93a1a1 !important; } /* Generic.Output */
            .highlight .pl-gp { color: #93a1a1 !important; } /* Generic.Prompt */
            .highlight .pl-gs { color: #93a1a1 !important; font-weight: bold !important; } /* Generic.Strong */
            .highlight .pl-gu { color: #cb4b16 !important; } /* Generic.Subheading */
            .highlight .pl-gt { color: #93a1a1 !important; } /* Generic.Traceback */
            .highlight .pl-kc { color: #cb4b16 !important; } /* Keyword.Constant */
            .highlight .pl-kd { color: #268bd2 !important; } /* Keyword.Declaration */
            .highlight .pl-kn { color: #859900 !important; } /* Keyword.Namespace */
            .highlight .pl-kp { color: #859900 !important; } /* Keyword.Pseudo */
            .highlight .pl-kr { color: #268bd2 !important; } /* Keyword.Reserved */
            .highlight .pl-kt { color: #dc322f !important; } /* Keyword.Type */
            .highlight .pl-ld { color: #93a1a1 !important; } /* Literal.Date */
            .highlight .pl-m { color: #2aa198 !important; } /* Literal.Number */
            .highlight .pl-s { color: #2aa198 !important; } /* Literal.String */
            .highlight .pl-na { color: #93a1a1 !important; } /* Name.Attribute */
            .highlight .pl-nb { color: #B58900 !important; } /* Name.Builtin */
            .highlight .pl-nc { color: #268bd2 !important; } /* Name.Class */
            .highlight .pl-no { color: #cb4b16 !important; } /* Name.Constant */
            .highlight .pl-nd { color: #268bd2 !important; } /* Name.Decorator */
            .highlight .pl-ni { color: #cb4b16 !important; } /* Name.Entity */
            .highlight .pl-ne { color: #cb4b16 !important; } /* Name.Exception */
            .highlight .pl-nf { color: #268bd2 !important; } /* Name.Function */
            .highlight .pl-nl { color: #93a1a1 !important; } /* Name.Label */
            .highlight .pl-nn { color: #93a1a1 !important; } /* Name.Namespace */
            .highlight .pl-nx { color: #93a1a1 !important; } /* Name.Other */
            .highlight .pl-py { color: #93a1a1 !important; } /* Name.Property */
            .highlight .pl-nt { color: #268bd2 !important; } /* Name.Tag */
            .highlight .pl-nv { color: #268bd2 !important; } /* Name.Variable */
            .highlight .pl-ow { color: #859900 !important; } /* Operator.Word */
            .highlight .pl-w { color: #93a1a1 !important; } /* Text.Whitespace */
            .highlight .pl-mf { color: #2aa198 !important; } /* Literal.Number.Float */
            .highlight .pl-mh { color: #2aa198 !important; } /* Literal.Number.Hex */
            .highlight .pl-mi { color: #2aa198 !important; } /* Literal.Number.Integer */
            .highlight .pl-mo { color: #2aa198 !important; } /* Literal.Number.Oct */
            .highlight .pl-sb { color: #586e75 !important; } /* Literal.String.Backtick */
            .highlight .pl-sc { color: #2aa198 !important; } /* Literal.String.Char */
            .highlight .pl-sd { color: #93a1a1 !important; } /* Literal.String.Doc */
            .highlight .pl-s2 { color: #2aa198 !important; } /* Literal.String.Double */
            .highlight .pl-se { color: #cb4b16 !important; } /* Literal.String.Escape */
            .highlight .pl-sh { color: #93a1a1 !important; } /* Literal.String.Heredoc */
            .highlight .pl-si { color: #2aa198 !important; } /* Literal.String.Interpol */
            .highlight .pl-sx { color: #2aa198 !important; } /* Literal.String.Other */
            .highlight .pl-sr { color: #dc322f !important; } /* Literal.String.Regex */
            .highlight .pl-s1 { color: #333    !important; } /* Literal.String.Single */
            .highlight .pl-ss { color: #2aa198 !important; } /* Literal.String.Symbol */
            .highlight .pl-bp { color: #268bd2 !important; } /* Name.Builtin.Pseudo */
            .highlight .pl-vc { color: #268bd2 !important; } /* Name.Variable.Class */
            .highlight .pl-vg { color: #268bd2 !important; } /* Name.Variable.Global */
            .highlight .pl-vi { color: #268bd2 !important; } /* Name.Variable.Instance */
            .highlight .pl-il { color: #2aa198 !important; } /* Literal.Number.Integer.Long */
        </style>
        <meta name="viewport" content="width=device-width">
        %(head)s
    </head>
    <body>
        <div class="wrapper">
            <header>
                <h1>%(title)s</h1>
                <h2 style="padding: 0; margin: 0;">%(subtitle)s</h2>
                <p class="view"><a href="%(link_href)s">%(link_name)s</a></p>
            </header>
            <section>
                %(content)s
            </section>
            %(footer)s
        </div>
        <script>
            var metas = document.getElementsByTagName('meta');
            var i;
            if (navigator.userAgent.match(/iPhone/i)) {
                for (i=0; i<metas.length; i++) {
                    if (metas[i].name == "viewport") {
                        metas[i].content = "width=device-width, minimum-scale=1.0, maximum-scale=1.0";
                    }
                }
                document.addEventListener("gesturestart", gestureStart, false);
            }
            function gestureStart() {
                for (i=0; i<metas.length; i++) {
                    if (metas[i].name == "viewport") {
                        metas[i].content = "width=device-width, minimum-scale=0.25, maximum-scale=1.6";
                    }
                }
            }
        </script>
    </body>
</content>
"""

def main(github_markdown, title, subtitle, header_link_name, header_link_href, footer="", css="", head="", dont_strip_first_content_h1=False, title_header=None):
    """
    render github markdown to html
    """
    options = os.environ.get('GRIP_OPTIONS', '')
    content = check_output(f'grip {github_markdown} {options} --norefresh --no-inline --export -')
    content = re.split(r'<article[^>]*>', content)[-1]
    content = content.split('</article>')[0]
    content = content.replace('user-content-', '')
    if not dont_strip_first_content_h1:
        content = content.split('<h1>')[-1].split('</h1>', 1)[-1]
    if not title_header:
        title_header = title
    print(template % {
        'content': content,
        'subtitle': subtitle,
        'title': title,
        'title_header': title_header,
        'footer': f'<footer>{footer}</footer>' if footer else '',
        'link_name': header_link_name,
        'link_href': header_link_href,
        'css': css,
        'head': head,
    })

if __name__ == '__main__':
    argh.dispatch_command(main)
